@page "/listRestaurants"
@using Kitchenator.Web.PropertyManager.Data;
@using kitchenator.Domain.Concepts.Realestate;
@using kitchenator.Domain.Contracts.Managers;
@using kitchenator.Domain.Contracts;
@inject BackendConnector connector
@inject ICountriesLoader CountriesLoader

<h1 style="font-family: Chiller; font-size: 56pt;">Terrible Tacos Restaurant List</h1>
@if (restaurants is { } && restaurants.Any())
{
    <hr />
    <h3>Capacity and Cost</h3>

    <div class="alert-info">
        You are currently spending a total of <b>€@restaurants.Sum(r => r.MonthlyRent.Value).ToString("### ### ###.0")</b> on
        monthly rent across @restaurants.Count().ToString("### ###") restaurants.<br />
        Total capacity: <b>@restaurants.Sum(r => r.ChefCapacity.Value).ToString("### ###")</b> employees.
    </div>
    <hr />
}

<h3>List of Restaurants</h3>
<EditForm EditContext="@editContext">
    <label>Narrow the list:</label>
    <InputSelect @bind-Value="@SelectedCountry">
        <option value="">All countries</option>
        @if (CountriesLoader.Countries is { })
        {
            @foreach (var country in CountriesLoader.Countries)
            {
                <option value="@country.CountryCode.Value">@country.CountryName.Value</option>
            }
        }
    </InputSelect>
</EditForm>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>City</th>
            <th>Chef Capacity </th>
            <th>Monthly Rent</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var restaurant in restaurants)
        {
            <tr>
                <td>@GuidToShortSweetness(restaurant)</td>
                <td>@restaurant.Name</td>
                <td>@restaurant.City.CityName.Value, @restaurant.City.CountryCode.Value</td>
                <td>@restaurant.ChefCapacity</td>
                <td>€@restaurant.MonthlyRent.Value.ToString("### ### ###.00")</td>
            </tr>
        }
    </tbody>

</table>


@code
{

    private EditContext editContext;
    private object dummyObject = new object();
    private string _selectedCountry;
    private List<Restaurant> restaurants = new List<Restaurant>();
    private List<Restaurant> allRestaurants = new List<Restaurant>();

    public string SelectedCountry
    {
        get { return _selectedCountry; }
        set
        {
            _selectedCountry = value;
            if (_selectedCountry.Any())
            {
                restaurants = allRestaurants
                    .Where(r => r.City.CountryCode.Value.Equals(_selectedCountry, StringComparison.InvariantCultureIgnoreCase))
                    .ToList();
            }
            else
            {
                restaurants = allRestaurants;
            }
        }
    }

    protected override void OnInitialized()
    {
        editContext = new EditContext(dummyObject);
    }

    protected override async Task OnInitializedAsync()
    {
        await CountriesLoader.Initialize();

        var restaurantsFound = await connector.GetRestaurants();
        allRestaurants = restaurantsFound.Any() ? restaurantsFound.ToList() : new List<Restaurant>();
        restaurants = allRestaurants;
    }

    private static string GuidToShortSweetness(Restaurant restaurant)
    {
        var uglyGuid = restaurant.Id.Value.ToString();
        return $"{uglyGuid.Substring(0, 5)}...";
    }
}
